@model InformsISG.Entities.Dtos.Makine_Kontrol_KriterDTO
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery antiforgery
@{
    var tokenSet = antiforgery.GetAndStoreTokens(Context);
    ViewData["Title"] = "EditKontrolKriter";
    var KontrolKriteri = (List<InformsISG.Entities.Dtos.Makine_Kontrol_KriterDTO>)ViewBag.KontrolKriteri;
    int siraNo = 1;
    TempData["KontrolKriterBaslik"] = TempData["KontrolKriterBaslik"];
    long deneme = 0;
}

<div class="card shadow-sm">
    <div class="card-header">
        <h3 class="card-title">KONTROL KRİTER MADDELERİ</h3>
        <div class="card-toolbar">
            <a href="@Url.Action("KontrolKriteri","Makine",new {id=TempData["KontrolKriterBaslik"] })" class="btn btn-danger btn-hover-rotate-start">GERİ DÖN</a>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <table id="tblBirim" class="table table-striped table-row-bordered gy-5 gs-7">
                <thead>
                    <tr>
                        <th>
                            Sıra  No
                        </th>
                        <th>
                            Kriter Maddesi
                        </th>
                        <th>İşlemler</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in KontrolKriteri)
                    {

                            deneme = item.Id;
                            <tr>
                                <td>
                                    @siraNo
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Madde_Ad)
                                </td>
                                <td>
                                    <div class="menu-item px-3">
                                        <a onclick="VeriSil(@item.Id,this)" class="menu-link px-3">
                                            Çıkar
                                        </a>
                                    </div>

                                </td>
                            </tr>
                            siraNo++;
                        

                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="card-footer">

    </div>
</div>
<form asp-action="EditKontrolKriteri2">
    <div class="card shadow-sm">
        <div class="card-header">
            <h3 class="card-title">Kontrol Maddesi Ekle</h3>
            <div class="card-toolbar">
                <input type="submit" class="btn btn-success btn-hover-rotate-end" value="KAYDET" id="btnkaydet">&nbsp;
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-10">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Madde_Ad" class="control-label"></label>
                        <input asp-for="Madde_Ad" class="form-control" />
                        <span asp-validation-for="Madde_Ad" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer">

        </div>
    </div>
</form>




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script type="text/javascript">
       function VeriSil(ID, obj) {
            var btn = $(obj);
            Swal.fire({
                title: 'ÇIKARMA İŞLEMİ',
                text: "Çıkarmak istediğinize emin misiniz?",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#50cd89',
                cancelButtonColor: '#f1416c',
                confirmButtonText: 'Çıkar!',
                cancelButtonText: 'Hayır Çıkarma!',
                showClass: {
                    popup: 'animate_animated animate_fadeInDown'
                },
                hideClass: {
                    popup: 'animate_animated animate_fadeOutUp'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        method: 'POST',
                         url: '@Url.Action("KontrolKriterDelete", "Makine")',
                        headers: {'@tokenSet.HeaderName' : '@tokenSet.RequestToken'},
                        data: { id: ID }
                    }).done(function (d) {
                        const result = $.parseJSON(d);
                        if (result.ResultStatus == 0) {
                            Swal.fire({
                                title: 'SİLİNDİ',
                                icon: 'success',
                                text: `${result.Message}`,
                                showClass: {
                                    popup: 'animate_animated animate_fadeInDown'
                                },
                                hideClass: {
                                    popup: 'animate_animated animate_fadeOutUp'
                                }
                            });
                            btn.parent().parent().parent().fadeOut(1000);
                        }
                    }).fail(function () {
                        Swal.fire({
                            title: 'HATALI İŞLEM',
                            text: "Veri silinemedi",
                            icon: 'error',
                            showClass: {
                                popup: 'animate_animated animate_fadeInDown'
                            },
                            hideClass: {
                                popup: 'animate_animated animate_fadeOutUp'
                            }
                        })
                    })
                }
            });
        }
    </script>

}
