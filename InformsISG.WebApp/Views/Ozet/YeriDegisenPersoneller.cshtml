@model IEnumerable<InformsISG.Entities.Dtos.Personel_BilgiDTO>
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery antiforgery
@using System.Security.Claims
@{
    var currentuser = this.User.FindFirst(ClaimTypes.Name).Value;
    var currentrole = this.User.FindFirst(ClaimTypes.Role).Value;
    var currentID = this.User.FindFirst(ClaimTypes.NameIdentifier).Value;
    var tokenSet = antiforgery.GetAndStoreTokens(Context);
    ViewData["Title"] = "Index";
    int i = 1;
}

<div class="card shadow-sm">
    <div class="card-header">
        <h3 class="card-title"> PERSONELLER</h3>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="tblPersonelBilgi" class="table table-striped table-row-bordered gy-5 gs-7">
                <thead>
                    <tr>
                        <th>
                            Sıra No
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Ad_Soyad)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Sicil_No)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Sgk_No)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Tc_No)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Telefon1)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @i
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Ad_Soyad)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Sicil_No)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Sgk_No)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Tc_No)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Telefon1)
                            </td>

                            @if (currentrole.Equals("SuperAdmin"))
                            {
                                <td>
                                    <button type="button" class="btn btn-primary btn-sm dropdown-toggle"
                                            data-kt-menu-trigger="click"
                                            data-kt-menu-placement="bottom-start">
                                        İşlemler
                                    </button>
                                    <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold fs-7 w-100px py-4"
                                         data-kt-menu="true">
                                        <div class="menu-item px-3">
                                            <a asp-action="Edit" asp-route-id="@item.Id" class="menu-link px-3">
                                                Düzenle
                                            </a>
                                        </div>
                                        <div class="menu-item px-3">
                                            <a asp-action="Details" asp-route-id="@item.Id" class="menu-link px-3">
                                                Ayrıntılar
                                            </a>
                                        </div>
                                        <div class="menu-item px-3">
                                            <a onclick="VeriSil(@item.Id,this)" class="menu-link px-3">
                                                Sil
                                            </a>
                                        </div>
                                    </div>
                                </td>
                            }

                        </tr>
                        i++;
                    }
                </tbody>

            </table>

        </div>

    </div>
    <div class="card-footer">
    </div>
</div>
@section Scripts{
    <script>

        $("#tblPersonelBilgi").DataTable({
            "pageLength": 50,
            language: {
                "sDecimal": ",",
                "sEmptyTable": "Tabloda herhangi bir veri mevcut değil",
                "sInfo": 'Toplam kayıttan _START_  - _END_ arasındaki kayıtlar gösteriliyor.' + "Toplam "+@ViewBag.PersonelCount + " kayıt vardır.",
                "sInfoEmpty": "Kayıt yok",
                "sDom": '<"top"i>rt<"bottom"flp><"clear">',
                "sInfoFiltered": "(MAX kayıt içerisinden bulunan)",
                "sInfoThousands": ".",
                "sLengthMenu": "Sayfada MENU kayıt göster",
                "sLoadingRecords": "Yükleniyor...",
                "sProcessing": "İşleniyor...",
                "sSearch": "Ara:",
                "sZeroRecords": "Eşleşen kayıt bulunamadı",
                "oPaginate": {
                    "sFirst": "İlk",
                    "sLast": "Son",
                    "sNext": "Sonraki",
                    "sPrevious": "Önceki"
                },
                "oAria": {
                    "sSortAscending": ": artan sütun sıralamasını aktifleştir",
                    "sSortDescending": ": azalan sütun sıralamasını aktifleştir"
                },
                "select": {
                    "rows": {
                        "_": "%d kayıt seçildi",
                        "1": "1 kayıt seçildi"
                    }
                }
            },
            dom:
                "<'row'" +
                "<'col-sm-6 d-flex align-items-center justify-conten-start'>" +
                "<'col-sm-6 d-flex align-items-center justify-content-end'f>" +
                ">" +

                "<'table-responsive'tr>" +

                "<'row'" +
                "<'col-sm-12 col-md-5 d-flex align-items-center justify-content-center justify-content-md-start'i>" +
                "<'col-sm-12 col-md-7 d-flex align-items-center justify-content-center justify-content-md-end'p>" +
                ">"

        });
    </script>

    <script type="text/javascript">
       function VeriSil(ID, obj) {
            var btn = $(obj);
            Swal.fire({
                title: 'SİLME İŞLEMİ',
                text: "Silmek istediğinize emin misiniz?",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#50cd89',
                cancelButtonColor: '#f1416c',
                confirmButtonText: 'Evet Sil!',
                cancelButtonText: 'Hayır Silme!',
                showClass: {
                    popup: 'animate_animated animate_fadeInDown'
                },
                hideClass: {
                    popup: 'animate_animated animate_fadeOutUp'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        method: 'POST',
                        url: '@Url.Action("Delete", "Personel_Bilgi")',
                        headers: {'@tokenSet.HeaderName' : '@tokenSet.RequestToken'},
                        data: { id: ID }
                    }).done(function (d) {
                        const result = $.parseJSON(d);
                        if (result.ResultStatus == 0) {
                            Swal.fire({
                                title: 'SİLİNDİ',
                                icon: 'success',
                                text: `${result.Message}`,
                                showClass: {
                                    popup: 'animate_animated animate_fadeInDown'
                                },
                                hideClass: {
                                    popup: 'animate_animated animate_fadeOutUp'
                                }
                            });
                            btn.parent().parent().parent().parent().fadeOut(1000);
                        }
                    }).fail(function () {
                        Swal.fire({
                            title: 'HATALI İŞLEM',
                            text: "Veri silinemedi",
                            icon: 'error',
                            showClass: {
                                popup: 'animate_animated animate_fadeInDown'
                            },
                            hideClass: {
                                popup: 'animate_animated animate_fadeOutUp'
                            }
                        })
                    })
                }
            });
        }
    </script>

}
